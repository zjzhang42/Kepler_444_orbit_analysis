[data_paths]
# Hipparcos ID of the star, used for fetching absolute astrometry.
# If the Hipparcos ID is invalid the fit will not use HGCA astrometry. 
# In that case you must supply a parallax and parallax_error in [priors].
HipID = 94931
# The file containing the Hipparcos Gaia Catalog of Accelerations.
HGCAFile = HGCA_vEDR3.fits
# The file containing the radial velocity time series for the star.
RVFile = Kepler444_RV_combo.dat
# The file containing the relative astrometry for the star.
AstrometryFile = Kepler444_relAST_newkeck_published_2022keck.txt
# The path to the Gaia/GOST epochs and scan angles as a csv file.
GaiaDataDir = ../../../Projects/Orbit_Dynamics/Deep_Dive/1.Kepler444/0.data/orvara_basic_data/gaia
# The path to all the Hipparcos (original reduction) intermediate data. Subfolders (as used on the original CD) are automatically handled.
Hip1DataDir = ../../../Projects/Orbit_Dynamics/Deep_Dive/1.Kepler444/0.data/orvara_basic_data/hip1
# The path to all the Hipparcos (Floor van Leeuwen/second reduction) intermediate data. Subfolders (as used on the original DVD) are automatically handled.
Hip2DataDir = ../../../Projects/Orbit_Dynamics/Deep_Dive/1.Kepler444/0.data/orvara_basic_data/hip2
# The file path to the initial parameter guesses (starting conditions for the walkders) to the orbit. Set to None for default guess.
start_file = init_params_Kepler444_without_BC_A_deltaRV.dat

[mcmc_settings]
# Number of temperatures to use in the parallel tempering chain.
ntemps = 50
# Number of walkers. Each walker will have ntemps number of chains.
nwalkers = 100
# Number of planets to fit.
nplanets = 1
# Number of steps contained in each chain.
nstep = 1000000
# How much to thin the chain (save every thin-th step).
thin = 50
# Number of threads to use with emcee. Note this built-in parallelization is poor.
nthreads = 1
# True if you want to use the epoch astrometry in GaiaDataDir, Hip1DataDir,
# Hip2DataDir. Hip1 and Hip2 data is combined in a 60/40 mix as described in
# the HGCA paper (Brandt 2018 and 2021). False if not. 
use_epoch_astrometry = True
# Use a separate jitter for each RV instrument?
jit_per_inst = True

[priors_settings]
# Priors on primary mass (solar), if prior is not specified, mpri should be inf.
mpri = 0.75
mpri_sig = 0.03
minjitter = 1e-5
maxjitter = 10

[secondary_gaia]
# If the secondary star is in Gaia, set companion_ID to a nonnegative number
# matching the ID of the companion in the relative astrometry file.  Setting
# companion_ID to a negative number ignores the rest of this.
companion_ID = 0
# The rest of these should be from Gaia in units of mas.
pmra = 94.5078744156069
pmdec = -630.781056151556
epmra = 0.05458837
epmdec = 0.07768267
corr_pmra_pmdec = -0.12684982

[plotting]
# Path to mcmc chains. This is what's produced by the orbit_fit command.
McmcDataFile = Kepler444_chain000.fits
# Diagnostic plots to check for convergence.
check_convergence = True
# Define burnin for chains.
burnin = 5000
# Which companion to plot?
iplanet = 0

# Name of the target
target = Kepler444
# This is a customized range of epochs you want to plot.
start_epoch = 1800.
end_epoch = 2200.
# Number of random orbits drawn from the posterior distribution you want to plot.
num_orbits = 200
# Define step size for plotting.
num_steps = 1000
# Plot random predicted epoch positions on the Astrometry plot.
predicted_years = 1950,2000,2010,2020,2030
# Prediction of the location of the companion in a future epoch.
position_predict = 1950

# Select which plot you want to generate
Astrometry_orbits_plot = True
Astrometric_prediction_plot = True
RV_orbits_plot = True
RV_plot = True
RV_Instrument = All
Relative_separation_plot =True
Position_angle_plot = True
Proper_motion_plot = True
Proper_motion_separate_plots = False
Corner_plot = True

############# Advanced plotting settings #############
# 1. Set axes limits. Set the upper and lower limit for x and y axes.
set_limit = False
xlim = 2008, 2022
ylim = -1,1
# Choose the color of the marker for plotting the observed data points.
marker_color = red

# 2. Turn on/off colorbar. Choose a matplotlib colormap, and choose to color
# code by the secondary mass (msec_solar or msec_jup) or eccentricity (ecc).
use_colorbar = True
colormap = viridis
reference = msec_solar

# 3. Turn on/off the title of the plot? Additionally, if user wants to add
# text somewhere on the plot, enter the text and its x and y position (with
# (0, 0) being the bottom left and (1, 1) being the top right).
show_title = False
add_text = True
text_name = Kepler444
x_text = 0.5
y_text = 0.9

[save_results]
# quantiles: median and 1sigma = 0.16, 0.5, 0.84,
# median and 2sigma = 0.025, 0.5, 0.975, or arbitrary
save_params = True
err_margin = 0.16, 0.5, 0.84
